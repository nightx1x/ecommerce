services:
  db:
    image: postgres:15-alpine
    container_name: ecommerce-db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
        - db_data:/var/lib/postgresql/data
        - ./migrations:/migrations
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: ecommerce-dev
    restart: unless-stopped
    environment:
      - APP_ENV=${APP_ENV:-development}
      - APP_PORT=${APP_PORT:-8080}
      - APP_NAME=${APP_NAME:-ecommerce-api}
      - DB_HOST=db
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSLMODE=${DB_SSLMODE:-disable}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-24h}
      - REFRESH_TOKEN_EXPIRATION=${REFRESH_TOKEN_EXPIRATION:-168h}
    volumes:
      - .:/app
      - go-modules:/go/pkg/mod
    ports:
      - "${APP_PORT:-8080}:8080"
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - dev
  prod:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: Dockerfile
    restart: always
    environment:
      - APP_ENV=production
      - APP_PORT=${APP_PORT:-8080}
      - APP_NAME=${APP_NAME:-ecommerce-api}
      - DB_HOST=db
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSLMODE=${DB_SSLMODE:-require}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-24h}
      - REFRESH_TOKEN_EXPIRATION=${REFRESH_TOKEN_EXPIRATION:-168h}
    ports:
      - "${APP_PORT:-8080}:8080"
    depends_on:
      db:
        condition: service_healthy
    profiles: 
      - prod
volumes:
  db_data:
  go-modules:
